<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>DeepSeek Image Converter</title>
    <style>
        :root {
            --primary: #3B82F6;
            --success: #10B981;
            --background: #F8FAFC;
        }

        body {
            font-family: 'Segoe UI', system-ui;
            min-height: 100vh;
            margin: 0;
            padding: 2rem;
            background: var(--background);
            display: grid;
            place-items: center;
        }

        .container {
            background: white;
            border-radius: 1rem;
            padding: 2rem;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            width: min(90%, 500px);
            text-align: center;
        }

        .drop-area {
            border: 2px dashed #CBD5E1;
            border-radius: 1rem;
            padding: 2rem;
            margin: 1rem 0;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .drop-area:hover {
            border-color: var(--primary);
            background: #EFF6FF;
        }

        #preview {
            max-width: 200px;
            display: none;
            margin: 1rem auto;
            border-radius: 0.5rem;
        }

        button {
            background: var(--primary);
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 0.5rem;
            cursor: pointer;
            transition: all 0.3s ease;
            width: 100%;
            margin: 1rem 0;
        }

        button:hover {
            opacity: 0.9;
            transform: translateY(-1px);
        }

        .loader {
            display: none;
            width: 24px;
            height: 24px;
            border: 3px solid #FFF;
            border-radius: 50%;
            border-top-color: transparent;
            animation: spin 1s linear infinite;
            margin: 0 auto;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Image Converter</h1>
        
        <div class="drop-area" id="dropArea">
            üìÅ Drag & Drop Image <br>or<br>
            <button onclick="document.getElementById('fileInput').click()">
                Select File
            </button>
        </div>
        
        <img id="preview" alt="Preview">
        
        <select id="format">
            <option value="jpeg">JPEG</option>
            <option value="png">PNG</option>
            <option value="webp">WEBP</option>
        </select>

        <button onclick="convertImage()" id="convertBtn">
            <span id="btnText">Convert Now</span>
            <div class="loader" id="loader"></div>
        </button>
    </div>

    <input type="file" id="fileInput" accept="image/*" hidden>

    <script>
        const dropArea = document.getElementById('dropArea');
        const fileInput = document.getElementById('fileInput');
        const preview = document.getElementById('preview');
        const convertBtn = document.getElementById('convertBtn');
        const loader = document.getElementById('loader');
        const btnText = document.getElementById('btnText');

        // File selection handlers
        dropArea.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropArea.style.borderColor = '#3B82F6';
        });

        dropArea.addEventListener('dragleave', () => {
            dropArea.style.borderColor = '#CBD5E1';
        });

        dropArea.addEventListener('drop', (e) => {
            e.preventDefault();
            dropArea.style.borderColor = '#CBD5E1';
            fileInput.files = e.dataTransfer.files;
            showPreview();
        });

        fileInput.addEventListener('change', showPreview);

        function showPreview() {
            const file = fileInput.files[0];
            if (file && file.type.startsWith('image/')) {
                preview.style.display = 'block';
                preview.src = URL.createObjectURL(file);
            }
        }

        async function convertImage() {
            const file = fileInput.files[0];
            if (!file) return alert('Please select an image first!');

            try {
                // Show loading state
                btnText.textContent = 'Converting...';
                loader.style.display = 'block';
                convertBtn.disabled = true;

                // Create canvas
                const img = await createImageBitmap(file);
                const canvas = document.createElement('canvas');
                canvas.width = img.width;
                canvas.height = img.height;
                const ctx = canvas.getContext('2d');
                ctx.drawImage(img, 0, 0);

                // Convert to selected format
                const format = document.getElementById('format').value;
                const mimeType = `image/${format === 'jpeg' ? 'jpeg' : format}`;

                canvas.toBlob((blob) => {
                    const url = URL.createObjectURL(blob);
                    const link = document.createElement('a');
                    link.download = `converted.${format}`;
                    link.href = url;
                    link.click();
                    URL.revokeObjectURL(url);
                    
                    // Reset UI
                    btnText.textContent = 'Convert Now';
                    loader.style.display = 'none';
                    convertBtn.disabled = false;
                }, mimeType, 0.9);
                
            } catch (error) {
                alert(`Conversion failed: ${error.message}`);
                btnText.textContent = 'Convert Now';
                loader.style.display = 'none';
                convertBtn.disabled = false;
            }
        }
    </script>
</body>
</html>
